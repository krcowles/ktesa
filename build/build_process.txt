Vers. 20160506 + 20160517 Tom's comments

I. Images with iFrame (and optional Elevation Chart)
-----------------------------------------------------------------------------------
THIS PROCESS describes how to create a website page when there is a GPS track file
available, and optionally an elevation chart, if available. NOTE: The workarea used for
creating inputs for the build has been specified in order to reduce "clutter" in the build
area, and to locally preserve copies of files in case they are needed later. The files
required for the build will be moved later to the correct git directories, after the build
has successfully completed.
------------------------------------------------------------------------------------

1.  Select desired pictures from source (e.g. Tom's Flickr album, Ken's Apple
    photos, etc.), and place them in a designated work area. [kc: Currently using
    ~/src/HIKES/Webdat/<hike_name>]. Ensure that you get copies of the photos that 
    contain full meta-data (e.g. for Apple, in photos, choose: Export->unmodified originals).
	*** NOTE: When actually creating the web page, a subset of these photos may be selected
	without otherwise affecting this process in any way.
	
2.  If desired, change the name of the photos from their original generic names, in order
    to indicate content. This may simplify identification of the photos later, but is
    NOT required.

3.  Assuming the Flickr album doesn't already exist, upload the photos to Flickr and
    create a new album with those items in it. If the photos are already uploaded,
	simply create a new album.
	
4.  Enter descriptions for each of the photos in the album, otherwise the default of "unused"
	will appear in the final description on the web page.

5.  Provide an appropriate name for the album. If the photos are derived from more than
    one contributor, and you wish to identify that in the album name, you may
    optionally append the album name with "_Combo" (or other designator of your choice).
    This is NOT required for the process to work as specified here.
   
6.  Copy the album URL, or leave the page open for later use of cut and paste of the URL.
	Alternately, download the html for the page and use that in the build process as
	specified later. 

7.  Make sure that exiftool has been installed and is accessible from the
    work area. Copy the <hike>.GPX file into the same workarea as the photos.

8.  Depending on how you proceeded in step 6:
		- Run the mkgpsv utility with the -u flag containing the URL of the Flickr album,
		OR
		- Run the mkgpsv utility with the -f flag followed by the html src filename.
	You may execute mkgpsv -h to get a complete list of options and more information about
	the utility. Either way, the output will be a file called GPSVinput.tsv; 
	RENAME the file to <hike>.tsv (otherwise the file will be indistinguishable from all
	the other .tsv files).
	
    **** NOTE **** : the pictures in the Flickr album must exactly match the 
    photo names and number of photos in the work area, or mkgpsv will fail!!
    After successful creation of the .tsv file (visually inspect before proceeding!),
    the local copies of the photos may be removed.

9.  If not already done, go to the GPSVisualizer website and create the map file using
    the work area files: <hike>.GPX and <hike>.tsv -- make sure that all marker and
    list files are turned OFF. You may enter the Google Map API key here, or let the
    'add2indx' utility do that for you. Download the map and move it into the local work
    area, renaming it <hike>_geomap_no_lists.html.
	[Consider using a jpg version of the map. Then we could store the map on Flickr, 
	and the tools can handle it as just another picture. We would still want a link to 
	the "live map" but this would eliminate the need to store a second (no lists) version 
	of the map in git.][NOTE: the second version (with lists) can be created via javascript
	and is not required to be stored in git...]
   
10. Create and store optional files, such as the elevation chart, which should also have
	a unique identifying filename, e.g. <hike>_Elev.jpg.
	**** NOTE: Do not place the optional <hike_elevation_chart.jpg into the work
    area before running mkgpsv, or it will think it is a photo that does not exist in the
    Flickr album, and mkgpsv will not execute!
    [Consider adding the elevation chart to Flickr. Then this procedure and the tools can
    handle it as just another picture. Consider adding a link to a live elevation chart
    like the one produced by Endomondo that shows your position on the map as you mouse
    over the chart. There are web based and other tools to create elevation charts from a
    gpx file. I'm not sure if they do it as nicely as Endomondo does though]
   
-----------------------------------------------------------------------------------------
    THE FOLLOWING FILES MUST ALL RESIDE IN THE SAME DIRECTORY ['build'] IN ORDER FOR
    THE PAGE CREATION TOOLS TO WORK - This is due to ajax restrictions on writing to a 
    local computer via javascript. Copy these from your work area to the build directory.
    NOTE: This process cannot be invoked on Chrome - it does not support it. Use Firefox.
    	- newPgAssist.html [should already reside there]
    	- newPgAssist.js [should already reside there]
    	- newPgAssist.css [should already reside there]
    	- jQuery-1.12.1.js [should already reside there, OR a newer version of it]
    	- <hike>.tsv
    	- <hike>_geomap_no_lists.html
    	- <hike>_elev.jpg
-----------------------------------------------------------------------------------------

11. Copy above files, as needed, into the 'build' directory.
    
12. Using the html editor of choice: Edit the "newPgAssist.html" file from the build
    directory and list the photo names EXACTLY as they appear in the Flickr album and
    work area. The names will reside in the list area <li> elements. Also specify the 
    <hike>.tsv file, the <hike>_geomap_no_lists.html file and the (optional) 
    <hike_elevation_chart>.jpg (make sure the option "inclElev" contains only the text
    "YES" when specifying the chart, and "NO" when not).

13. Run the tool:
	Simply double-click the newPgAssist.html file. It will create/download a file
	called newPage.txt.

14. In the local git directory, edit the file 'pages/TemplateWFrame.html' and copy the text
    from the file downloaded (above) into the indicated area. Edit the remaining areas to
    correspond with the hike name, details, links, etc. ***** SAVE AS <hike>.html - DO 
    NOT JUST 'SAVE' AND OVERWRITE TemplateWFrame.html *****!
	[Maybe create a sed/awk/shell script to do this step.]
	NOTE: for now, enter the summary data table info & references & links: will be
	automated later...
	
15. Before invoking the newly saved <hike>.html file, move the following files from the
    build directory:
    	- <hike.tsv> should be moved to the project/gpsv directory
    	- <hike>_geomap_no_lists.html should be moved to the project/maps directory
    	- <hike>_Elev.jpg should be moved to the project/images directory
    	
16. Double-click the newly created <hike>.html to ensure all details are correct
    before proceeding.

17. To create the track file, use the 'mktrk' utility to operate on the .GPX file.
	Use the mktrk -h call to assess required information for the utility. The resulting
	.json file should be placed in the 'json' project directory.
	
18. Use the utility 'add2indx' to create the new row in the hikeDataTbl.html file and to add
	the required hike data into newArrays.js for creating markers & tracks. Use add2indx -h
	to assess needed information: be sure you have the geomap name, the latitude
	and longitude of the trailhead, and the name of the json track file created above.
	NOTE: if you don't wish to manually respond to the inquiries in 'add2indx', you can
	create an "inputs" file and invoke add2indx < inputs. The inputs file should have
	the following lines for "standard" (not Visitor Centers) hikes: (do not include #comments)
		y		# are geomaps used? (if -m flag not set)
		geomapname_geomap_no_lists.html
		y
		H		# or "C" for Cluster Hikes
		y
		NearestCity
		NameOfHikeToAppearInTable
		HtmlFileNameWithout.htmlExtension
		LinkToGoogleMap
		LinkToFlickrAlbum
		y		# verifying all data inputs: assumed correct with "y" entries (11)
		y
		y
		y
		y
		y
		y
		y
		y
		y
		y
		Y		# "N" if don't wish to overwrite hikeDataTbl.html and save locally instead
		xxx.xxxxxx	#latitude to 6 or more decimal places
		y		# is latitude correct?
		-xxx.xxxxxx #lingitude to 6 or more decimal places
		y		# is longitude correct?
		y		# is json file  present
		jsonfilename.json
		y		# is name correct?
		Y		# "N" if don't wish to overwrite hikeArrays.js and save locally instead
		
		NOTE: NOT recommended until you are thoroughly familiar with add2indx inputs!!!!
		
19. Double-click the index.html file to ensure that the entries are correct, and that
    the link to the new hike page works properly, and that all elements of the new
    page are as desired. When edits are complete, push the data to github:
    	if not already in the gh-pages branch, >git checkout gh-pages
    	> git status
    	> git add <files>
    	> git commit -m "notes"
    	> git push
    Allow time for the site to update, then go to the site to test the push: 
	http://krcowles.github.io/ktesa
	
II. Images with no iFrame (but possibly other generic map images)
------------------------------------------------------------------------------------------
This process describes how to create a website page when there is no map or GPX file.
It is largely the same as above with the following exceptions:
------------------------------------------------------------------------------------------

 1-6. Same
 7.  There is no GPX file, and it is not required.
 8.  Use the 'mkpgfile' utility instead of the 'mkgpsv' utility. The -h help details the
     required/optional arguments. It is very similar except that the GPS data will not
     be captured, if there is any (often there isn't any on older photos). The same
     NOTE applies.
     
 9.  Instead of using a GPSVisualizer map, you may wish to create a jpg file of another
     online map (or screen capture, for example) to clarify the hike location. Place the 
     jpg file in the images directory.

10-11.  Copy any required files into the build directory:
-----------------------------------------------------------------------------------------
    THE FOLLOWING FILES MUST ALL RESIDE IN THE SAME DIRECTORY ['build'] IN ORDER FOR
    THE PAGE CREATION TOOLS TO WORK - This is due to ajax restrictions on writing to a 
    local computer via javascript. Copy these from your work area to the build directory.
    	- newPgNoFrame.html [should already reside there]
    	- newPgNoFrame.js [should already reside there]
    	- newPgNoFrame.css [should already reside there]
    	- jQuery-1.12.1.js [should already reside there, OR a newer version of it]
    	- <hike>.tsv
		- other jpg you wish to include
-----------------------------------------------------------------------------------------

12. Using the html editor of choice: Edit the "newPgNoFrame.html" file from the build
    directory and list the photo names EXACTLY as they appear in the Flickr album and
    work area. The names will reside in the list area <li> elements. Also specify the 
    <hike>.tsv file in the corresponding <p> element. This file provides the opportunity
    to supply two types of additional images: 1) images for which you may create your
    own captions; 2) images for which no captions will appear when moused-over. These
    areas are clearly marked in the body.
    
13. Run the tool:
	Double-click the newPgNoFrame.html file
	
14. Same

15. Before invoking the newly saved <hike>.html file, move the following files from the
    build directory:
    	- <hike.tsv> should be moved to the project/gpsv directory
    	- .jpg files in the images directory
    	
16. Same

17. N/A

18. Same, no json file.

19. Same
