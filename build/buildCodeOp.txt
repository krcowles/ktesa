UPDATED 7/17/2017 – only GPX file is needed, there is a ‘noPics’ option, and
    local copies of photos for the page are no longer required.

INTRODUCTION:
    Except for cases where code is shared with run-time code, the [project]/build 
directory contains various scripts required to build and edit hike pages and 
index pages for the site.  The following activities can be performed with the 
scripts in this directory:
    1.  Create a new hike page
    2.  Create a new index page
    3.  Edit a hike page
    4.  Edit an index page
    5.  Delete a hike page

    The scripts are designed such that two types of users are expected to deploy
them: the site masters (Tom Sandberg and Ken Cowles), and ‘registered users’ 
(an option not yet fully specified but expected to accommodate outside users 
who wish to maintain/enter their own relevant hikes after potential review and 
acceptance by the site masters). Site masters will make changes directly to 
the file system and database, whereas registered users will have changes stored
in temporary directories and in a temporary database, pending review by the 
site masters. The site masters will review the entries and move them into the 
site if accepted, deleting the temporary data. (NOTE: This process has not 
yet been defined and documented by the site masters, and the description here 
is purely speculative).

    To invoke any of the above processes, the ‘registered user key’ must be 
entered into the main site page (index.html). When entered, the available 
options will appear and be enabled.


PROCESS:
 I. CREATING A NEW HIKE PAGE
    To begin the process of creating a new hike page for the site, the user
    should be prepared with the appropriate data required:
    A. Total Hike Length (in miles), whether loop, out-and-back, or two-car hike;
    B. The elevation change (in feet), from min to max, experienced on the hike;
    C. Available GPX file (xml file with GPS data) of the actual track taken on
       the hike, using any appropriate device or phone app: e.g. "EndoMondo"
       (phone app), Garmin GPS Handheld, etc. The file should be accessible from
       the users local machine;
    D. Google maps direction link to trailhead;
    E. Photo album link(s) to on-line photos taken during the hike (e.g. Flickr, 
       Google, etc). Note, these should contain GPS metadata in order to be
       displayed on the hike map.
    F. References: Book/Author containing trail descriptions (and/or other 
       info pertinent to the hike); Weblinks to site about the hike; App links,
       Blogs, On-line Newslinks, etc with significant or interesting info about
       the hike;
    G. Other prompted information (some optional):
        - Hike/Trail Name: 
            NOTE Script must encode special html characters (e.g. &, <, >)
        - Locale: select from a drop-down. Missing one? Notify site master...
        - Hike "Type": logistics, i.e. Out-and-back, Loop, Two-car (select from
            drop-down)
        - Relative difficulty: select from a drop-down
        - Facilities available at trailhead, if any
        - WOW Factor - what makes this hike special in a word or two
        - What seasons are best or should be avoided?

        - Any other GPX or MAP files you wish to appear on the page (see "L." below)
        - Any other images you wish to include with the photos (may be on your
          local machine)
    H. Select Exposure: select a radio button corresponding to conditions
    I. Hike relative to other hikes on the site: select a radio button
       corresponding to the set-up: e.g. "trailhead common to multiple hikes",
       "hike at Visitor Center", etc.
    J. OPTIONAL: Trail Tips: any warnings, special circumstances about the hike
       that the hiker should be aware of prior to embarking.
    K. Hike Description: In your own words, describe the hike, locale, views, 
       special features of the hike.
    L. OPTIONAL: enter/label any extra data of interest, such as Proposed Routes,
       Alternate Maps, etc. in the "GPS Maps & Data" section.

    NOTE: Any hike data entered may be saved until you return to complete it 
    later, by selecting the 'Save Form Data' button. You will be prompted to give
    it a name. This action adds a button to the bottom of the page allowing you
    to either restore the data (except for any uploaded files - e.g. GPX), or to
    delete the saved form. This button will remain active until you explicitly
    delete it, and there is only room for two such buttons at this time. It
    resides in your browser's memory until you delete it.

    ---------- Enter Hike Date ----------
    ** STYLING **
    enterHike.css contains styling for the enterHike.html form, described below.
    Note the browser-dependent code for enlarging the check boxes on the page.
    Included is some styling for the accompanying modal window.

    ** JAVASCRIPT **
    The enterHike.html script, containing the entry form, calls up two javascript
    files: modal_setup.js and enterHike.js. 
        - modal_setup.js contains the code for the modal window that appears
          when you wish to save form data, along with code supporting the form
          save process.
        - enterHike.js contains the code to accomplish multiple tasks:
            1. Preload a file name into the corresponding "GPS Maps & Data"
               section when a file is uploaded in the "File Data" section. The
               option "maps" or "gpx" in the adjacent "Storage Location" 
               drop-down will properly locate the file. Then the user need only 
               to supply the labeling information in the GPS Maps & Data section.
            2. Suppress text boxes for entry of latitude/longitude unless an
               Index Page is being created (needed for location of Visitor Center).
            3. Select the appropriate action for form submittal based on whether
               the radio button for "CREATE A NEW: Visitor Center/Index Page" or
               "CREATE A NEW: Hike Page" is selected at the top of the form.
               This will also gray out data not required when Index Page is 
               selected and modify some other form presentation.
            4. Fill in 'placeholder' information in the References section,
               depending on Reference Type selected from the accompanying
               drop-down box.
            5. Toggle displays for items not needed when "I don't want to specify
               pictures at this time" is selected.
            6. IF form data has been previously saved, include the item(s)
               retained in browser memory, and provide a means for restoring
               if a button is selected, and a means for deleting and removing
               from browser memory if that is selected. Code is provided for
               activating the modal window if "Save Form Data" is selected.
    ** HTML/FORM **
    The form, with inputs for the above-listed information, is invoked from the
    main page by selecting the 'Create New Hike or Index Page' button. The
    registration code is currently set as '1948'. The form html is contained in 
    'enterHike.html'. There is no php in this file, only form elements to submit
    containing the data required to construct a page in the following scripts.
    As noted above, up to two partially-filled forms may be saved in memory, to
    be restored at any time in the future. When the 'Validate Data' button is
    selected, the form calls 'validateHike.php'.

    The presentation of the page is organized as into sections. The first
    section allows the user to select the option to create either an Index
    Page (Visitor Center Location), or a hike page. Succeeding sections are
    enclosed in a box with legend (i.e. 'fieldset'). 
        1. Basic Hike Data - Text box or drop-down fields for entering the
           information outlined in A., B., and G. above;
        2. Exposure data - radio button selection;
        3. File Data: DEPENDING ON PAGE TYPE:
           a. HIKE PAGE:
                i.   First, a checkbox indicating whether or not pictures (jpg files) 
                     will be incorporated on the page.
                     1) If not, the item following will be hidden from view and the
                        user can proceed with uploading the GPX file (ii., below);
                     2) If so, the user can enter up to three individual album links
                        containing the photos from which to draw for the hike page.
                        Entering data into the first two auto-fills the url's 
                        at the bottom of the form, labeled 'URL for Photo Album..."
                        Also, a drop-down selects the color of the icons to appear on
                        the constructed hike map page marking the location where the
                        photos were snapped;
                ii.  REQUIRED - GPX File; Identify the gpx file to
                     upload from your desktop. This is the basis for much of the 
                     hike page construction.
                iii. OPTIONAL FILES:
                    1) Proposed Data: O, 1, or 2 items may appear here identifying
                       either a map file, or a gpx (track) file to be placed on
                       the page in the 'GPS & Maps Data' section, 'Proposed Data';
                       Note that the file reference(s) will automatically be placed
                       in the 'GPS Maps & Data' section below, but the user will
                       need to complete the entry by providing a label and the
                       'click-on' text.
                    2) Actual Data: 0, 1, or 2 itmes may appear here identifying
                       additonal map files or gpx (track) files to be placed on
                       the page in the 'Maps & GPS Data' section, 'Actual Data';
                       Note that the file reference(s) will automatically be placed
                       in the 'GPS Maps & Data' section below, but the user will
                       need to complete the entry by providing a label and the
                       'click-on' text.
                    3) 0, 1, or 2 additional images (not in photo albums) that
                       you may wish to include in the picture rows on the page.
                       For example, perhaps a jpg of a geological map of the
                       area, or other informational data. Note, captions for these
                       additional files is not currently supported.
           b. INDEX PAGE:
                i.   File data is now limited to uploading of a map file for 
                     display on the index page, intended to show park boundaries
                     trails, and other useful information. 
                ii.  Latitude/Longitude: enter the GPS location of the Visitor
                     Center.
        4. Map Marker Type:
            a. Selecting 'Visitor Center' automatically switches page mode to
               Index Page Creation. Deselecting reverts to Hike Page creation;
            b. Many parks have trailheads at the Visitor Center or in very  close
               proximity thereto. For these types, select 'Hike At / In Close
               Proximity to Visitor Center';
            c. Some trailheads provide access to multiple hiking possibilities
               (e.g. Santa Fe Ski Area). Where trailheads overlap, or are 
               close enough to warrant grouping, select the 'Trailhead Common
               to Multiple Hikes';
            d. All Others - hikes which meet none of the above conditions.
        5. Test Sections
            a. Trail Tips: If there are any special conditions or circumstances
               about which the user should be apprised, include those notes 
               here. This is optional and normally not required.
            b. Always include a Hike Description, describing the environment,
               trail conditions, access, interesting features, etc.
        6. Hike References
            Help the user by providing book references and/or on-line resources
            about the hike. There is rarely a time when no such references will
            exist. What would have helped you on this hike? Entry is self-
            explanatory, and 'hints' are provided when the reference type is
            selected. Default is 'Book'.
        7. GPS Maps & Data Section:
            a. Proposed Data: If selections were made in the "File Data" section
               above (3.), then add the label for the data (usually something 
               like "GPX File") and the text that when clicked-on will 
               display the data for the user (e.g. "Proposed Route").
            b. Actual Data: If selections were made in the "File Data" section
               above (3.), then add the label for the data (usually something 
               like "MAP") and the text that when clicked-on will 
               display the data for the user (e.g. "Actual Track").
        8. Other URL's:
            a. If not entered above in 3.a.1, provide album links here.
            b. Provide a link to the Google Maps directions for the trailhead.
    When data entry is complete, select 'Validate Data', or if not complete
    and you wish to complete it later, select 'Save Form Data'. Note that 
    selecting this option will save all text entries, but NOT file uploads.
    This is a security provision, so please re-enter any GPX or other file
    uploads needed for the page. Of course, you can clear the data completely
    with the 'Clear and Restart' button. Note that selecting the 'Validate Data'
    button opens a new tab, and the data entry form is still available.

    ---------- Validate Hike Data & Select Photos If Applicable ----------
    
    Once the 'Validate Data' button is selected on the enterHike.html page, the
    form is submitted and calls either:
    A. Hike Page Validation
       The form submittal data is presented on a new page, "Validate This Hike!"
       The main driver, with additonal modules invoked therefrom, is
       'validateHike.php'. 

       ** STYLING **
       validateHike.css provides styling for the presentation of summary tables
       and page elements, the same as they will appear on the final product.
       Again, browser-dependent styling is added for enlarged checkboxes.

       ** JAVASCRIPT **
       validateHike.js contains the code for user-interaction on the validation
       page. 
       1. Operation of the 'Select All' pictures checkbox;
       2. Operation of the 'Overwrite File' buttons appearing on the page
          only when a filename for a new file matches a pre-existing filename.
       3. Hide/Display the 'File Data' section pertaining to photos depending on 
          whether or not the user selection 'I don't want to specify pictures
          at this time' was made.

       ** PHP FORM **
       1. The hike page title is retrieved and encoded for special html characters
          for display on the final page.
       2. The base name for any newly created files is formed the the uploaded
          GPX file name by dropping the .gpx/.GPX extension.
       3. The 'I don't want to specify pictures at this time' checkbox status
          is checked. The status is saved in var $usetsv (boolean).
          a. If selected, skip the process creating acquiring photo album data;
          b. If not selected:
             i.     The process is initiated by invoking 'getPicDat.php'. This
                    script will process all album links specified by the user
                    in the 'File Data' section, one by one (max 3). For each
                    album, the html is parsed and required data is extracted,
                    including the link for the 'original' uploaded photo with
                    metadata. The information is stored in sequential arrays 
                    for forming the xml tags later. 
             ii.    Once data has been extracted from the album, the routine
                    invokes the 'getExif.php' script to extract metadata. This
                    script loads abbreviated jpg files, of sufficient size to
                    contain the metadata. The abbreviated files are temporarily
                    stored, and exif data is extracted. Afterwards, the files are
                    deleted. 
             iii.   Next, the pictures are sorted by date/time the photo was
                    taken. This is accomplished by the routine 'timeSort.php'
             iv.    Finally, the 'xmlTsv.php' script is called to form the
                    xml <picDat> tags for the data collected. The result is
                    stored in session memory until the page save occurs.
       4. Now 'fileUploads' is invoked to process uploaded files, one by one,
          and to provide a summary of the activity to user, along with any
          associated warnings or errors. 
          a. First, an array is initialized which will hold the status of any
             uploaded files for the "GPS Maps & Data" Proposed/Actual data
             sections. At this time, there is provision for two files in each
             of the subsections: Proposed, or Actual. (Refer to the comments
             on this array in the fileUploads.php script)
          b. The first file, the only required file, is the GPX file. This file
             upload is tested for upload errors, and file type. If either of these
             occurs, the user is notified and the script stops. Otherwise,
             validation data is listed for the file, including file name, type,
             and size in bytes. NOTE: if the filename already exists on the 
             site, the user is notified, but given a chance to overwrite the
             existing file by checking the accompanying checkbox.
          c. The next file is the track (JSON) file. It is automatically created
             from the above GPX file and stored in a tmp directory until saved
             to the site. Currently, a tool in the tools directory (mktrk.sh)
             is used to create the file. The relevant file data is summarized
             for this file, similar to the above GPX file. It too is checked
             against existing filenames to ensure uniqueness, or, as above, 
             the user is notified and afforded the opportunity to overwrite it.
          d. REMAINING FILE UPLOADS ARE OPTIONAL. Up to two image files may
             be uploaded to supplement the hike page picture rows. These are
             processed in a manner similar to the GPX file, with stats and
             duplicate name checking.
          e. Two files each in the 'Proposed' and 'Actual' sections of the
             'GPS Maps & Data' section may be uploaded. Files are checked 
             against other existing files on the site AND against currently
             uploaded files. If existing, the behavior of notification and 
             overwriting is similar to above. If already uploaded, the user
             is notified, and the file is not uploaded again.
       5. The information relative to duplication and overwriting choice(s) for
          uploaded files is saved in hidden inputs and passed via form submission
          to the next form. This information is used during the save routine
          to determine which files get moved (not duplicates, or user elected
          to overwrite them), and which get deleted.
       6. Form data from enterHike.html is now extracted and saved in local
          variables. Some info is saved in session memory to be utilized to 
          create the <row> xml during save.
       7. Reference data is processed into xml next by the 'xmlRefs.php' script.
          The data will be presented later in the page;
       8. GPS Maps & Data: Proposed & Actual - any data is processed into xml
          by including the 'xmlGpsDat.php' script. The data will be presented
          later in the page;
       9. IF pictures are to be included ($usetsv is true), the xml string formed
          in the 'xmlTsv.php' script is processed to extract info for the photo
          summary at the bottom of the validation page.
      10. Marker-dependent page elements:
          Drop-down boxes will appear after the file upload summaries on the 
          page, based on:
          a. Hikes at/near a Visitor Center: the database is scanned for Visitor
             Centers (existing) so that the user may select one from the drop-down
             to associate the hike with the selected center;
          b. Hikes with trailheads in close proximity: the database is scanned
             for 'cluster' groups so that the user may select one from the
             drop-down to associate the hike with the selected group.
      11. Next on the page is a table with the hike data as it will eventually
          appear in the table of hikes.
      12. Next is a summary table of the data appearing on the finished page.
          The table is presented as for those earlier hikes which have no
          gpx files associated.
      13. A summary of Google Maps Data is listed next, including marker type,
          Latitude and Longitude of the marker, and the name of the JSON file
          used to display track info on the 'big' map 
      14. More miscellaneous information supplied by the user and utilized to
          create the hike page.
      15. Next is the representation of any Trail Tips section, and the hike
          description
      16. The user-supplied references are listed next as they will appear on
          the hike page;
      17. The user-supplied GPS Maps & Data (if any) will be shown as it will
          appear on the hike page;
      18. Lastly, a complete display of photos collected from the user-supplied
          online album urls. Each image has a check box allowing inclusion of
          that photo on the hike page, and a check box specifying inclusion on
          the hike-page map. A check box is also presented to allow selection
          of all items for inclusion.
          
    B. (or) Index Page Validation

    
    