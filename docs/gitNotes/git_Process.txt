************************  PROCESS NOTES  **********************

IF there is a way to create a remote repository from the CLI, it is not yet known,
therefore, assuming a <username> account has been created, go to the server at github.com
and proceed as follows:
[NOTE: >git remote     manipulates *local* "remote handles" only]

1. Using the " + " drop-down at the top of the page (or other means if obvious)
   Create an empty repository:
	- select " + New repository ";
	- provide name of repository (<rep_name>), select "Public" radio button, check the
		"Initialize this repository with a README" checkbox;
	- select " Create repository ";
	- automatically, a repository <rep_name> with the branch called "master" is created.
	  It contains a README.md file within it; also the message will be displayed:
	  	"<username> initial commit".
	- using the branch drop-down box, create a branch called " gh-pages "; 
		NOTE: this will be the website host (required by github)
			  This will also contain a README.md files with the message displayed:
			  	"<username> initial commit".
			  The gh-pages branch inherits any files from the master, empty thus far;
			  The url is now the gh-pages branch and that branch is displayed.
2. ** DO NOT Select the " upload files " box, rather follow the following process using
   the CLI on the *local* computer:
    - To create the local repository corresponding to the newly created repository,
      "cd" to the area you will use for development (e.g. for examples here, >cd ~/swproj)
    - GO TO THE MASTER BRANCH on the server: how you get there is important.
      *** DO NOT use the drop-down branch box and select "master" as the url will have an
          additional component in it ('tree/'). Best is to go to the user account, then
        (select <username> at top of page), then select <rep_name> and copy its URL.
      Paste the url into the CLI command below:
      
      >git clone --branch gh-pages --single-branch https://github.com/<username>/<rep_name>
      
      The following will be displayed: ('tst' is <rep_name> for this example)
			Cloning into 'tst'...
			remote: Counting objects: 3, done.
			remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
			Unpacking objects: 100% (3/3), done.
			Checking connectivity... done.
	  The new directory 'tst' ('<rep_name>') now exists in 'swproj' and has its '.git'
	    sub-directory created and initialized. It contains only README.md
	- >git status    will produce the following message:
			On branch gh-pages
			Your branch is up-to-date with 'origin/gh-pages'.
			nothing to commit, working directory clean
	  >git remote -v will show the following:
	  		origin	https://github.com/<username>/<rep_name> (fetch)
			origin	https://github.com/<username>/<rep_name> (push)
	  The remote handle "origin" has also been created, with its corresponding url.
	  ** NOTE: even though <rep_name> doesn't include /gh-pages, somehow git "knows"
	     that a push will go to the branch gh-pages, not the specified orgin
	- move all the files & folders you want for the remote repository into the new
	  <rep_name> local directory
	- verify the process:
		>git status    [the following message will appear (sub your files), example
					    contains only 2 files]:
			On branch master

			Initial commit

			Untracked files:
			  (use "git add <file>..." to include in what will be committed)

				Readme
				mkgpsv_r6

			nothing added to commit but untracked files present (use "git add" to track)
	- >git add *
	- >git status   will list all the new files as "Untracked"
	- >git commit -m "load all files for starting point"
	  The following message is displayed:
	  		[gh-pages a5eac1a] push intial files to remote repository tst
			 2 files changed, 380 insertions(+)
			 create mode 100644 Readme
			 create mode 100755 mkgpsv_r6
	- IF ALL FILES/FOLDERS are present and committed in local <rep-name>, proceed with
	  a push to the remote repository:
	  
	  >git push   [NOTE: git uses default handle "origin" here, and knows its going to
	  			   "gh-pages" remote repository branch]
	   The following message was displayed:
	   		Counting objects: 4, done.
			Delta compression using up to 2 threads.
			Compressing objects: 100% (4/4), done.
			Writing objects: 100% (4/4), 5.28 KiB | 0 bytes/s, done.
			Total 4 (delta 0), reused 0 (delta 0)
			To https://github.com/krcowles/tst
			   f7eeca3..a5eac1a  gh-pages -> gh-pages
	- EVERYTHING IS READY TO PROCEED WITH BRANCHES & DEVELOPMENT WORK locally, and the
	  remote repository is at the same state as the local repository
	  		
			 
